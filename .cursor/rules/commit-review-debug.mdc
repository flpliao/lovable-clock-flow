---
description: 為 Cursor 使用者設計的一組自訂 AI Prompts，涵蓋以下常見開發操作：- cc：**重要** 使用 git 指令都要加上 --no-pager  請根據下列 git 已 staged（已暫存）變更內容（來自 `git --no-pager diff --cached`），產生一則符合規範的 Git commit 訊息，協助整理並清楚描述程式碼變更。- review：針對程式碼變更進行品質與安全性審查，提出優化建議。- debug：協助分析錯誤訊息與程式碼，提供解決方案與預防方法。- nb：根據變更內容自動建議並命名新分支，方便版本管理。- help：列出所有可用指令，方便快速查詢。透過簡短指令快速觸發以上功能，大幅提升開發效率與團隊協作一致性。
alwaysApply: false
---

---

# 快速指令列表

- `cc`：產生 Git commit 訊息
- `review`：進行程式碼審查
- `debug`：協助除錯
- `help`：顯示所有 prompts
- `nb`：依變更內容建立新分支並命名

---

## cc：Git Commit 訊息產生器

````prompt
請根據下列 git 已 staged（已暫存）變更內容（來自 `git --no-pager diff --cached`），產生一則符合規範的 Git commit 訊息。
（請勿包含未暫存或未追蹤檔案的變更）

若未檢查出任何已暫存變更，請重新執行 `git --no-pager diff --cached` 確認是否有變更被加入暫存區，再重新執行本指令。
目前沒有已暫存的變更，請執行 `git add` 或確認狀態後再試一次。

步驟：

1. 檢查變更：
   - 僅限 staged files（已暫存檔案）
   - 若無變更，請提示並結束

2. 修改細項：
   - 每個變動檔案簡要說明變更重點
   - 若為重構、功能新增或錯誤修復，請說明目的與影響

3. commit 格式：
<type>: <subject>

<description>

type 類型：
- feat：新增功能
- fix：錯誤修復
- docs：文件變更
- style：格式調整（不影響功能）
- refactor：重構（非新功能或修復）
- perf：效能優化
- test：測試相關
- chore：建置/工具/雜項調整

subject 規則：
- 中文、簡潔、50 字內，不加句號

description 規則：
- 中文說明修改目的、重點
- 可使用條列說明

請將輸出結果包在 Markdown 格式的 ``` 區塊中，以便使用者方便複製。
範例輸出
```md
feat: 新增使用者註冊 API

- 新增 POST /api/register 路由
- 建立 RegisterController 處理註冊流程
- 驗證 email、密碼欄位格式
```

若有提供 `git status`、`git --no-pager diff --cached` 或 `lines=`，請優先依其內容生成訊息。

````

---

## review：程式碼審查

```prompt
請審查下列程式碼變更，並從以下角度給予具體建議：

1. 程式碼品質
2. 潛在錯誤
3. 效能優化
4. 安全性風險
5. 是否符合最佳實踐
```

---

## debug：除錯協助

```prompt
請協助分析以下錯誤與程式碼，並提供：

1. 錯誤原因分析
2. 解決方案建議
3. 預防類似問題的方法
```

---

## nb：建立分支與命名

```prompt
請根據當前程式碼變更，協助建立一個從 main 分出的新分支，並建議分支命名：

1. 檢查變更：
   - staged / unstaged / untracked / deleted files
2. 判斷分支類型：
   - feat/：新增功能
   - fix/：修復錯誤
   - refactor/：程式重構
   - hotfix/：緊急修正
   - chore/：環境或設定調整
3. 命名格式：
   <類型>/<簡要描述>
   - 使用小寫英文
   - 單字以 dash 分隔
   - 最多 5 個單字內
4. 請產出：
   - 建議分支名稱
   - 命名原因
   - 若有 `git status` 或 `git --no-pager diff --cached`，請以其為主
```

---

## 使用方式

- 所有操作預設僅針對已 staged 內容，請先將欲提交的檔案加入暫存區。

1. 在 Cursor 中載入本文件（可常駐開啟）
2. 使用任一快速指令（如 `cc`, `review`）或輸入完整提示（如 `請使用 commit prompt`）
3. 輸入 `help` 查看所有可用 prompts
