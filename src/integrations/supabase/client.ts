// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// 從環境變數讀取 Supabase 配置，如果沒有則使用預設值
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || '';
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || '';

// 檢查環境變數是否正確設置
if (!import.meta.env.VITE_SUPABASE_URL || !import.meta.env.VITE_SUPABASE_ANON_KEY) {
  console.warn(
    '⚠️  Supabase 環境變數未設置，使用預設值。請創建 .env.local 文件並設置 VITE_SUPABASE_URL 和 VITE_SUPABASE_ANON_KEY'
  );
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    storage: localStorage,
  },
});

// Supabase Auth 工具函數
export const ensureUserAuthenticated = async () => {
  try {
    console.log('🔐 檢查 Supabase Auth 認證狀態...');

    const {
      data: { session },
      error,
    } = await supabase.auth.getSession();

    if (error) {
      console.error('❌ 獲取 Supabase 會話失敗:', error);
      return false;
    }

    if (!session) {
      console.log('❌ 未發現 Supabase 會話');
      return false;
    }

    console.log('✅ Supabase Auth 會話正常');
    console.log('🎫 JWT Token:', session.access_token.substring(0, 20) + '...');
    return true;
  } catch (error) {
    console.error('🔥 Supabase Auth 檢查錯誤:', error);
    return false;
  }
};

// 管理員權限檢查（保持向後相容）
export const verifyAdminPermissions = async () => {
  console.log('🔐 檢查管理員權限...');
  const isAuthenticated = await ensureUserAuthenticated();

  if (!isAuthenticated) {
    console.log('❌ 用戶未認證');
    return false;
  }

  console.log('✅ 管理員權限確認');
  return true;
};

// 初始化日誌
console.log('🚀 Supabase 客戶端初始化完成 - 支援 Auth 系統');
