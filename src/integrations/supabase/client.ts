
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://skfdbxhlbqnoflbczlfu.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNrZmRieGhsYnFub2ZsYmN6bGZ1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDgzMzgzOTMsImV4cCI6MjA2MzkxNDM5M30.nHlFgWyHoGEpCRKXtWWHpoCRE2FjoD5XTESlae3zMhQ";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true
  }
});

// 簡化的模擬身份驗證函數
export const ensureUserAuthenticated = async () => {
  try {
    console.log('模擬身份驗證 - 廖俊雄已登入');
    
    // 檢查廖俊雄的員工記錄是否存在
    const { data: existingStaff, error: checkError } = await supabase
      .from('staff')
      .select('*')
      .eq('id', '550e8400-e29b-41d4-a716-446655440001')
      .maybeSingle();

    if (checkError) {
      console.error('檢查員工記錄錯誤:', checkError);
    }

    if (existingStaff) {
      console.log('✅ 廖俊雄員工記錄已存在');
      return true;
    }

    console.log('廖俊雄員工記錄不存在，需要手動創建');
    return false;
  } catch (error) {
    console.error('身份驗證檢查失敗:', error);
    return false;
  }
};
